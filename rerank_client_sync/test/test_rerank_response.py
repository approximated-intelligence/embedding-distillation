# coding: utf-8

"""
    SGLang Reranker API

    Reranking API for document relevance scoring

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rerank_client_sync.models.rerank_response import RerankResponse

class TestRerankResponse(unittest.TestCase):
    """RerankResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RerankResponse:
        """Test RerankResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RerankResponse`
        """
        model = RerankResponse()
        if include_optional:
            return RerankResponse(
                results = [
                    rerank_client_sync.models.rerank_result.RerankResult(
                        score = 1.337, 
                        document = '', 
                        index = 56, 
                        meta_info = { }, )
                    ],
                model = '',
                usage = rerank_client_sync.models.usage_info.UsageInfo(
                    prompt_tokens = 56, 
                    total_tokens = 56, ),
                object = 'rerank',
                id = '',
                created = 56
            )
        else:
            return RerankResponse(
        )
        """

    def testRerankResponse(self):
        """Test RerankResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
