# coding: utf-8

"""
    SGLang Reranker API

    Reranking API for document relevance scoring

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rerank_client_async.models.rerank_request import RerankRequest

class TestRerankRequest(unittest.TestCase):
    """RerankRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RerankRequest:
        """Test RerankRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RerankRequest`
        """
        model = RerankRequest()
        if include_optional:
            return RerankRequest(
                query = '',
                documents = [
                    ''
                    ],
                model = 'BAAI/bge-reranker-v2-m3',
                top_k = 56,
                return_documents = True,
                rid = None,
                user = ''
            )
        else:
            return RerankRequest(
                query = '',
                documents = [
                    ''
                    ],
        )
        """

    def testRerankRequest(self):
        """Test RerankRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
